[{"path":[]},{"path":"https://mlr3cmprsk.mlr-org.com/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement bblodfon@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 mlr3cmprsk authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"John Zobolas. Maintainer, author.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zobolas J (2025). mlr3cmprsk: Competing Risks Machine Learning 'mlr3'. R package version 0.0.0.9000.","code":"@Manual{,   title = {mlr3cmprsk: Competing Risks Machine Learning for 'mlr3'},   author = {John Zobolas},   year = {2025},   note = {R package version 0.0.0.9000}, }"},{"path":"https://mlr3cmprsk.mlr-org.com/index.html","id":"mlr3cmprsk-","dir":"","previous_headings":"","what":"Competing Risks Machine Learning for mlr3","title":"Competing Risks Machine Learning for mlr3","text":"package development Package website: release mlr3cmprsk extends mlr3 ecosystem unified interface machine learning competing risks survival analysis. provides consistent task, learner, prediction abstractions, enabling seamless benchmarking, model comparison, integration broader mlr3 framework.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Competing Risks Machine Learning for mlr3","text":"Install development version GitHub:","code":"# install.packages(\"pak\") pak::pak(\"mlr-org/mlr3cmprsk\")"},{"path":[]},{"path":"https://mlr3cmprsk.mlr-org.com/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Competing Risks Machine Learning for mlr3","text":"Please note mlr3cmprsk project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/LearnerCompRisks.html","id":null,"dir":"Reference","previous_headings":"","what":"Competing Risks Learner — LearnerCompRisks","title":"Competing Risks Learner — LearnerCompRisks","text":"Learner specializes Learner competing risks problems: task_type set \"cmprsk\" Creates Predictions class PredictionCompRisks. currently available option predict_types \"cif\", represents predicted cumulative incidence function observation test set.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/LearnerCompRisks.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Competing Risks Learner — LearnerCompRisks","text":"mlr3::Learner -> LearnerCompRisks","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/LearnerCompRisks.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Competing Risks Learner — LearnerCompRisks","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$selected_features() mlr3::Learner$train()","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/LearnerCompRisks.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Competing Risks Learner — LearnerCompRisks","text":"LearnerCompRisks$new() LearnerCompRisks$clone()","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/LearnerCompRisks.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Competing Risks Learner — LearnerCompRisks","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/LearnerCompRisks.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks Learner — LearnerCompRisks","text":"","code":"LearnerCompRisks$new(   id,   param_set = ps(),   predict_types = \"cif\",   feature_types = character(),   properties = character(),   packages = character(),   label = NA_character_,   man = NA_character_ )"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/LearnerCompRisks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks Learner — LearnerCompRisks","text":"id (character(1)) Identifier new instance. param_set (paradox::ParamSet) Set hyperparameters. predict_types (character()) Supported predict types. Must subset mlr_reflections$learner_predict_types. feature_types (character()) Feature types learner operates . Must subset mlr_reflections$task_feature_types. properties (character()) Set properties Learner (see initialization method $new(). Must subset mlr_reflections$learner_properties. packages (character()) Set required packages. warning signaled constructor least one packages installed, loaded (attached) later -demand via requireNamespace(). label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help().","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/LearnerCompRisks.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Competing Risks Learner — LearnerCompRisks","text":"objects class cloneable method.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/LearnerCompRisks.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks Learner — LearnerCompRisks","text":"","code":"LearnerCompRisks$clone(deep = FALSE)"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/LearnerCompRisks.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks Learner — LearnerCompRisks","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/LearnerCompRisks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Competing Risks Learner — LearnerCompRisks","text":"","code":"library(mlr3) # get all survival learners from mlr_learners: lrns = mlr_learners$mget(mlr_learners$keys(\"^cmprsk\")) names(lrns) #> [1] \"cmprsk.aalen\"  # get a specific learner from mlr_learners: mlr_learners$get(\"cmprsk.aalen\") #>  #> ── <LearnerCompRisksAalenJohansen> (cmprsk.aalen): Aalen Johansen Estimator ──── #> • Model: - #> • Parameters: list() #> • Packages: mlr3, mlr3cmprsk, and survival #> • Predict Types: [cif] #> • Feature Types: logical, integer, numeric, and factor #> • Encapsulation: none (fallback: -) #> • Properties: weights #> • Other settings: use_weights = 'use' lrn(\"cmprsk.aalen\") #>  #> ── <LearnerCompRisksAalenJohansen> (cmprsk.aalen): Aalen Johansen Estimator ──── #> • Model: - #> • Parameters: list() #> • Packages: mlr3, mlr3cmprsk, and survival #> • Predict Types: [cif] #> • Feature Types: logical, integer, numeric, and factor #> • Encapsulation: none (fallback: -) #> • Properties: weights #> • Other settings: use_weights = 'use'"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/MeasureCompRisks.html","id":null,"dir":"Reference","previous_headings":"","what":"Competing Risks Measure — MeasureCompRisks","title":"Competing Risks Measure — MeasureCompRisks","text":"measure specializes Measure competing risk problems. task_type set \"cmprsk\". predict_type set \"cif\". Predefined measures can found dictionary mlr3::mlr_measures.","code":""},{"path":[]},{"path":"https://mlr3cmprsk.mlr-org.com/reference/MeasureCompRisks.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Competing Risks Measure — MeasureCompRisks","text":"mlr3::Measure -> MeasureCompRisks","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/MeasureCompRisks.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Competing Risks Measure — MeasureCompRisks","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/MeasureCompRisks.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Competing Risks Measure — MeasureCompRisks","text":"MeasureCompRisks$new() MeasureCompRisks$clone()","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/MeasureCompRisks.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Competing Risks Measure — MeasureCompRisks","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/MeasureCompRisks.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks Measure — MeasureCompRisks","text":"","code":"MeasureCompRisks$new(   id,   param_set = ps(),   range,   minimize = NA,   average = \"macro\",   aggregator = NULL,   obs_loss = NULL,   properties = character(),   predict_type = \"cif\",   predict_sets = \"test\",   task_properties = character(),   packages = character(),   label = NA_character_,   man = NA_character_,   trafo = NULL )"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/MeasureCompRisks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks Measure — MeasureCompRisks","text":"id (character(1)) Identifier new instance. param_set (paradox::ParamSet) Set hyperparameters. range (numeric(2)) Feasible range measure c(lower_bound, upper_bound). bounds may infinite. minimize (logical(1)) Set TRUE good predictions correspond small values, FALSE good predictions correspond large values. set NA (default), tuning measure possible. average (character(1)) average multiple Predictions ResampleResult. default, \"macro\", calculates individual performances scores Prediction uses function defined $aggregator average single number. set \"micro\", individual Prediction objects first combined single new Prediction object used assess performance. function $aggregator used case. aggregator (function(x)) Function aggregate individual performance scores x x numeric vector. NULL, defaults mean(). obs_loss (function NULL) observation-wise loss function, e.g. zero-one classification error. properties (character()) Properties measure. Must subset mlr_reflections$measure_properties. Supported mlr3: \"requires_task\" (requires complete Task), \"requires_learner\" (requires trained Learner), \"requires_train_set\" (requires training indices Resampling), \"na_score\" (measure expected occasionally return NA NaN). predict_type (character(1)) Required predict type Learner. Possible values stored mlr_reflections$learner_predict_types. predict_sets (character()) Prediction sets operate , used aggregate() extract matching predict_sets ResampleResult. Multiple predict sets calculated respective Learner resample()/benchmark(). Must non-empty subset {\"train\", \"test\"}. multiple sets provided, first combined single prediction object. Default \"test\". task_properties (character()) Required task properties, see Task. packages (character()) Set required packages. warning signaled constructor least one packages installed, loaded (attached) later -demand via requireNamespace(). label (character(1)) Label new instance. man (character(1)) String format [pkg]::[topic] pointing manual page object. referenced help package can opened via method $help(). trafo (list() NULL) optional list two elements, containing transformation \"fn\" derivative \"deriv\". transformation function function applied aggregating pointwise losses, .e. requires $obs_loss present. example sqrt RMSE (regression).","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/MeasureCompRisks.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Competing Risks Measure — MeasureCompRisks","text":"objects class cloneable method.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/MeasureCompRisks.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks Measure — MeasureCompRisks","text":"","code":"MeasureCompRisks$clone(deep = FALSE)"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/MeasureCompRisks.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks Measure — MeasureCompRisks","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/PredictionCompRisks.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction Object for Competing Risks — PredictionCompRisks","title":"Prediction Object for Competing Risks — PredictionCompRisks","text":"object stores predictions returned learner class LearnerCompRisks. task_type set \"cmprsk\". accessing survival hazard functions, well complex methods LearnerCompRisks object possible atm.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/PredictionCompRisks.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Prediction Object for Competing Risks — PredictionCompRisks","text":"mlr3::Prediction -> PredictionCompRisks","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/PredictionCompRisks.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Prediction Object for Competing Risks — PredictionCompRisks","text":"truth (Surv) True (observed) outcome. cif (list()) Access stored CIFs.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/PredictionCompRisks.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Prediction Object for Competing Risks — PredictionCompRisks","text":"mlr3::Prediction$filter() mlr3::Prediction$format() mlr3::Prediction$help() mlr3::Prediction$obs_loss() mlr3::Prediction$print() mlr3::Prediction$score()","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/PredictionCompRisks.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Prediction Object for Competing Risks — PredictionCompRisks","text":"PredictionCompRisks$new() PredictionCompRisks$clone()","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/PredictionCompRisks.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Prediction Object for Competing Risks — PredictionCompRisks","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/PredictionCompRisks.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Object for Competing Risks — PredictionCompRisks","text":"","code":"PredictionCompRisks$new(   task = NULL,   row_ids = task$row_ids,   truth = task$truth(),   cif = NULL,   check = TRUE )"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/PredictionCompRisks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction Object for Competing Risks — PredictionCompRisks","text":"task (TaskCompRisks) Task, used extract defaults row_ids truth. row_ids (integer()) Row ids predicted observations, .e. row ids test set. truth (survival::Surv()) True (observed) response. cif (list()) list two matrix objects. matrix represents different competing event stores Cumulative Incidence function test observation. matrix, rows represent observations columns time points. names list must correspond competing event names (task$cmp_events). check (logical(1)) TRUE, performs argument checks predict type conversions.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/PredictionCompRisks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prediction Object for Competing Risks — PredictionCompRisks","text":"cif input currently list CIF matrices.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/PredictionCompRisks.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Prediction Object for Competing Risks — PredictionCompRisks","text":"objects class cloneable method.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/PredictionCompRisks.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Object for Competing Risks — PredictionCompRisks","text":"","code":"PredictionCompRisks$clone(deep = FALSE)"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/PredictionCompRisks.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction Object for Competing Risks — PredictionCompRisks","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/PredictionCompRisks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prediction Object for Competing Risks — PredictionCompRisks","text":"","code":"library(mlr3) task = tsk(\"pbc\") learner = lrn(\"cmprsk.aalen\") part = partition(task) p = learner$train(task, part$train)$predict(task, part$test) p #>  #> ── <PredictionCompRisks> for 91 observations: ────────────────────────────────── #>  row_ids time event       CIF #>        1   13     2 <list[2]> #>        6   60     0 <list[2]> #>       18   44     2 <list[2]> #>      ---  ---   ---       --- #>      268   40     0 <list[2]> #>      274   30     0 <list[2]> #>      276   25     0 <list[2]>  # CIF list: 1 matrix (obs x times) per competing event names(p$cif) # competing events #> [1] \"1\" \"2\" # CIF matrix for competing event 1 (first 5 test observations and 20 time points) p$cif[[\"1\"]][1:5, 1:20] #>      1 2 4 6 7 9 10 11 12 16 18 19 20 22         24         25         26 #> [1,] 0 0 0 0 0 0  0  0  0  0  0  0  0  0 0.01081081 0.01081081 0.01081081 #> [2,] 0 0 0 0 0 0  0  0  0  0  0  0  0  0 0.01081081 0.01081081 0.01081081 #> [3,] 0 0 0 0 0 0  0  0  0  0  0  0  0  0 0.01081081 0.01081081 0.01081081 #> [4,] 0 0 0 0 0 0  0  0  0  0  0  0  0  0 0.01081081 0.01081081 0.01081081 #> [5,] 0 0 0 0 0 0  0  0  0  0  0  0  0  0 0.01081081 0.01081081 0.01081081 #>              27         28         29 #> [1,] 0.01081081 0.01625043 0.01625043 #> [2,] 0.01081081 0.01625043 0.01625043 #> [3,] 0.01081081 0.01625043 0.01625043 #> [4,] 0.01081081 0.01625043 0.01625043 #> [5,] 0.01081081 0.01625043 0.01625043 # CIF matrix for competing event 2 (first 5 test observations and 20 time points) p$cif[[\"2\"]][1:5, 1:20] #>               1          2          4          6          7          9 #> [1,] 0.01081081 0.02162162 0.03243243 0.04864865 0.05945946 0.06486486 #> [2,] 0.01081081 0.02162162 0.03243243 0.04864865 0.05945946 0.06486486 #> [3,] 0.01081081 0.02162162 0.03243243 0.04864865 0.05945946 0.06486486 #> [4,] 0.01081081 0.02162162 0.03243243 0.04864865 0.05945946 0.06486486 #> [5,] 0.01081081 0.02162162 0.03243243 0.04864865 0.05945946 0.06486486 #>              10         11         12         16         18        19        20 #> [1,] 0.07027027 0.07567568 0.08108108 0.08648649 0.09189189 0.0972973 0.1027027 #> [2,] 0.07027027 0.07567568 0.08108108 0.08648649 0.09189189 0.0972973 0.1027027 #> [3,] 0.07027027 0.07567568 0.08108108 0.08648649 0.09189189 0.0972973 0.1027027 #> [4,] 0.07027027 0.07567568 0.08108108 0.08648649 0.09189189 0.0972973 0.1027027 #> [5,] 0.07027027 0.07567568 0.08108108 0.08648649 0.09189189 0.0972973 0.1027027 #>             22        24        25        26        27        28        29 #> [1,] 0.1081081 0.1135135 0.1243243 0.1297297 0.1297297 0.1351693 0.1460486 #> [2,] 0.1081081 0.1135135 0.1243243 0.1297297 0.1297297 0.1351693 0.1460486 #> [3,] 0.1081081 0.1135135 0.1243243 0.1297297 0.1297297 0.1351693 0.1460486 #> [4,] 0.1081081 0.1135135 0.1243243 0.1297297 0.1297297 0.1351693 0.1460486 #> [5,] 0.1081081 0.1135135 0.1243243 0.1297297 0.1297297 0.1351693 0.1460486  # data.table conversion tab = as.data.table(p) tab$CIF[[1]] # for first test observation, list of CIF vectors #> $`1` #>          1          2          4          6          7          9         10  #> 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000  #>         11         12         16         18         19         20         22  #> 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000  #>         24         25         26         27         28         29         30  #> 0.01081081 0.01081081 0.01081081 0.01081081 0.01625043 0.01625043 0.01625043  #>         31         32         33         35         37         38         39  #> 0.01625043 0.01625043 0.01625043 0.02172607 0.02172607 0.02172607 0.02172607  #>         41         42         43         44         46         47         48  #> 0.02172607 0.02743931 0.02743931 0.02743931 0.02743931 0.03371144 0.03371144  #>         49         50         51         53         54         55         57  #> 0.04009078 0.04647012 0.04647012 0.04647012 0.04647012 0.04647012 0.04647012  #>         58         60         61         62         63         64         65  #> 0.04647012 0.04647012 0.04647012 0.04647012 0.04647012 0.04647012 0.04647012  #>         66         69         71         72         73         74         75  #> 0.04647012 0.04647012 0.04647012 0.04647012 0.05479725 0.05479725 0.05479725  #>         76         77         78         79         80         81         83  #> 0.05479725 0.05479725 0.05479725 0.05479725 0.05479725 0.07346784 0.07346784  #>         84         85         87         90         91         93         94  #> 0.07346784 0.07346784 0.07346784 0.07346784 0.07346784 0.07346784 0.07346784  #>         96         97         98        100        101        103        104  #> 0.07346784 0.07346784 0.07346784 0.07346784 0.07346784 0.07346784 0.07346784  #>        106        107        108        109        110        111        112  #> 0.07346784 0.07346784 0.07346784 0.07346784 0.07346784 0.07346784 0.07346784  #>        117        118        120        123        125        126        128  #> 0.07346784 0.07346784 0.07346784 0.07346784 0.07346784 0.07346784 0.07346784  #>        129        131        132        133        134        135        137  #> 0.07346784 0.07346784 0.07346784 0.07346784 0.07346784 0.07346784 0.07346784  #>        139        143        145        147        149  #> 0.07346784 0.07346784 0.07346784 0.07346784 0.07346784  #>  #> $`2` #>          1          2          4          6          7          9         10  #> 0.01081081 0.02162162 0.03243243 0.04864865 0.05945946 0.06486486 0.07027027  #>         11         12         16         18         19         20         22  #> 0.07567568 0.08108108 0.08648649 0.09189189 0.09729730 0.10270270 0.10810811  #>         24         25         26         27         28         29         30  #> 0.11351351 0.12432432 0.12972973 0.12972973 0.13516935 0.14604858 0.15148820  #>         31         32         33         35         37         38         39  #> 0.15692781 0.15692781 0.16240345 0.17335474 0.17335474 0.18445707 0.19555940  #>         41         42         43         44         46         47         48  #> 0.19555940 0.19555940 0.19555940 0.20149071 0.21363355 0.21990567 0.22628501  #>         49         50         51         53         54         55         57  #> 0.22628501 0.23266435 0.23910065 0.23910065 0.23910065 0.25258045 0.25938578  #>         58         60         61         62         63         64         65  #> 0.26619112 0.28036305 0.28036305 0.28036305 0.28776049 0.28776049 0.28776049  #>         66         69         71         72         73         74         75  #> 0.28776049 0.29568631 0.29568631 0.29568631 0.29568631 0.30412159 0.32099215  #>         76         77         78         79         80         81         83  #> 0.32099215 0.32099215 0.33882674 0.34774403 0.34774403 0.35707932 0.36641462  #>         84         85         87         90         91         93         94  #> 0.37607182 0.38590146 0.38590146 0.39629821 0.40669495 0.41730388 0.41730388  #>         96         97         98        100        101        103        104  #> 0.41730388 0.41730388 0.41730388 0.41730388 0.44155284 0.44155284 0.45466039  #>        106        107        108        109        110        111        112  #> 0.46776794 0.48087549 0.48087549 0.48087549 0.49480226 0.50872903 0.52313604  #>        117        118        120        123        125        126        128  #> 0.55301723 0.55301723 0.55301723 0.57080366 0.57080366 0.60824876 0.60824876  #>        129        131        132        133        134        135        137  #> 0.60824876 0.60824876 0.60824876 0.60824876 0.63718362 0.63718362 0.66933345  #>        139        143        145        147        149  #> 0.66933345 0.66933345 0.66933345 0.66933345 0.66933345  #>"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":null,"dir":"Reference","previous_headings":"","what":"Competing Risks Task — TaskCompRisks","title":"Competing Risks Task — TaskCompRisks","text":"task extends mlr3::Task mlr3::TaskSupervised handle survival problems competing risks. target variable consists survival times event indicator, must non-negative integer set \\((0,1,2,...,K)\\). \\(0\\) represents censored observations, integers correspond distinct competing events. Every row corresponds one subject/observation. Predefined tasks stored mlr3::mlr_tasks. task_type set \"cmprsk\". Note: Currently right-censoring supported.","code":""},{"path":[]},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Competing Risks Task — TaskCompRisks","text":"mlr3::Task -> mlr3::TaskSupervised -> TaskCompRisks","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Competing Risks Task — TaskCompRisks","text":"cens_type (character(1)) Returns type censoring. Currently, \"right\" censoring type fully supported. API might change future support left interval censoring. cmp_events (character(1)) Returns names competing events.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Competing Risks Task — TaskCompRisks","text":"mlr3::Task$add_strata() mlr3::Task$cbind() mlr3::Task$data() mlr3::Task$divide() mlr3::Task$droplevels() mlr3::Task$format() mlr3::Task$head() mlr3::Task$help() mlr3::Task$levels() mlr3::Task$materialize_view() mlr3::Task$missings() mlr3::Task$print() mlr3::Task$rbind() mlr3::Task$rename() mlr3::Task$select() mlr3::Task$set_col_roles() mlr3::Task$set_levels() mlr3::Task$set_row_roles()","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Competing Risks Task — TaskCompRisks","text":"TaskCompRisks$new() TaskCompRisks$truth() TaskCompRisks$formula() TaskCompRisks$times() TaskCompRisks$event() TaskCompRisks$unique_events() TaskCompRisks$unique_times() TaskCompRisks$unique_event_times() TaskCompRisks$aalen_johansen() TaskCompRisks$cens_prop() TaskCompRisks$filter() TaskCompRisks$clone()","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Competing Risks Task — TaskCompRisks","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks Task — TaskCompRisks","text":"","code":"TaskCompRisks$new(   id,   backend,   time = \"time\",   event = \"event\",   label = NA_character_ )"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks Task — TaskCompRisks","text":"id (character(1)) Identifier new instance. backend (mlr3::DataBackend) Either DataBackend, object convertible DataBackend as_data_backend(). E.g., data.frame() converted DataBackendDataTable. time (character(1)) Name column outcome time. event (character(1)) Name column giving holds event indicator. \\(0\\) corresponds censoring, values \\(> 0\\) correspond different competing events. label (character(1)) Label new instance.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Competing Risks Task — TaskCompRisks","text":"right-censoring competing risk tasks currently supported.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"method-truth-","dir":"Reference","previous_headings":"","what":"Method truth()","title":"Competing Risks Task — TaskCompRisks","text":"True response specified row_ids. multi-state format using Surv event target column factor: Surv(time, .factor(event)) Defaults rows role \"use\".","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks Task — TaskCompRisks","text":"","code":"TaskCompRisks$truth(rows = NULL)"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks Task — TaskCompRisks","text":"rows (integer()) Row indices.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Competing Risks Task — TaskCompRisks","text":"survival::Surv().","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"method-formula-","dir":"Reference","previous_headings":"","what":"Method formula()","title":"Competing Risks Task — TaskCompRisks","text":"Creates formula competing risk models survival::Surv() LHS (left hand side).","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks Task — TaskCompRisks","text":"","code":"TaskCompRisks$formula(rhs = NULL)"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks Task — TaskCompRisks","text":"rhs NULL, RHS (right hand side) \".\", otherwise RHS \"rhs\".","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Competing Risks Task — TaskCompRisks","text":"stats::formula().","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"method-times-","dir":"Reference","previous_headings":"","what":"Method times()","title":"Competing Risks Task — TaskCompRisks","text":"Returns (unsorted) outcome times.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks Task — TaskCompRisks","text":"","code":"TaskCompRisks$times(rows = NULL)"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks Task — TaskCompRisks","text":"rows (integer()) Row indices.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Competing Risks Task — TaskCompRisks","text":"numeric()","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"method-event-","dir":"Reference","previous_headings":"","what":"Method event()","title":"Competing Risks Task — TaskCompRisks","text":"Returns event indicator.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks Task — TaskCompRisks","text":"","code":"TaskCompRisks$event(rows = NULL)"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks Task — TaskCompRisks","text":"rows (integer()) Row indices.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Competing Risks Task — TaskCompRisks","text":"integer()","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"method-unique-events-","dir":"Reference","previous_headings":"","what":"Method unique_events()","title":"Competing Risks Task — TaskCompRisks","text":"Returns unique events (excluding censoring).","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks Task — TaskCompRisks","text":"","code":"TaskCompRisks$unique_events(rows = NULL)"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks Task — TaskCompRisks","text":"rows (integer()) Row indices.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Competing Risks Task — TaskCompRisks","text":"integer()","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"method-unique-times-","dir":"Reference","previous_headings":"","what":"Method unique_times()","title":"Competing Risks Task — TaskCompRisks","text":"Returns sorted unique outcome times.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks Task — TaskCompRisks","text":"","code":"TaskCompRisks$unique_times(rows = NULL)"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks Task — TaskCompRisks","text":"rows (integer()) Row indices.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Competing Risks Task — TaskCompRisks","text":"numeric()","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"method-unique-event-times-","dir":"Reference","previous_headings":"","what":"Method unique_event_times()","title":"Competing Risks Task — TaskCompRisks","text":"Returns sorted unique event outcome times (cause).","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks Task — TaskCompRisks","text":"","code":"TaskCompRisks$unique_event_times(rows = NULL)"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks Task — TaskCompRisks","text":"rows (integer()) Row indices.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Competing Risks Task — TaskCompRisks","text":"numeric()","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"method-aalen-johansen-","dir":"Reference","previous_headings":"","what":"Method aalen_johansen()","title":"Competing Risks Task — TaskCompRisks","text":"Calls survival::survfit() calculate Aalen–Johansen estimator.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks Task — TaskCompRisks","text":"","code":"TaskCompRisks$aalen_johansen(strata = NULL, rows = NULL, ...)"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks Task — TaskCompRisks","text":"strata (character()) Stratification variables use. rows (integer()) Subset row indices. ... () Additional arguments passed survival::survfit.formula().","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Competing Risks Task — TaskCompRisks","text":"survival::survfit.object.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"method-cens-prop-","dir":"Reference","previous_headings":"","what":"Method cens_prop()","title":"Competing Risks Task — TaskCompRisks","text":"Returns proportion censoring competing risks task. default, returned observations, otherwise specified ones (rows).","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks Task — TaskCompRisks","text":"","code":"TaskCompRisks$cens_prop(rows = NULL)"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks Task — TaskCompRisks","text":"rows (integer()) Row indices.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Competing Risks Task — TaskCompRisks","text":"numeric()","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"method-filter-","dir":"Reference","previous_headings":"","what":"Method filter()","title":"Competing Risks Task — TaskCompRisks","text":"Subsets task, keeping rows specified via row ids rows. operation mutates task -place.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks Task — TaskCompRisks","text":"","code":"TaskCompRisks$filter(rows = NULL)"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks Task — TaskCompRisks","text":"rows (integer()) Row indices.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Competing Risks Task — TaskCompRisks","text":"Returns object , modified reference.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Competing Risks Task — TaskCompRisks","text":"objects class cloneable method.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risks Task — TaskCompRisks","text":"","code":"TaskCompRisks$clone(deep = FALSE)"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risks Task — TaskCompRisks","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/TaskCompRisks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Competing Risks Task — TaskCompRisks","text":"","code":"library(mlr3) task = tsk(\"pbc\")  # meta data task$target_names # target is always (time, status) for right-censoring tasks #> [1] \"time\"   \"status\" task$feature_names #>  [1] \"age\"      \"albumin\"  \"alk.phos\" \"ascites\"  \"ast\"      \"bili\"     #>  [7] \"chol\"     \"copper\"   \"edema\"    \"hepato\"   \"platelet\" \"protime\"  #> [13] \"sex\"      \"spiders\"  \"stage\"    \"trig\"     \"trt\"      task$formula() #> Surv(time, as.factor(status)) ~ . #> <environment: namespace:survival>  # survival data task$truth() # survival::Surv() object #>   [1]  13:2 147+   33:2  63:2  49:1  60+   81:2  78:2   1:2 123:2   9:2 117+  #>  [13] 117:2 120+   25:2   4:2 139+   44:2 113+   22:2   8:2 134:2 135+   47:2 #>  [25]   2:2  18:2 148+   10:2 126:2 148+  104:2 129+   93:2 118+    7:2 106:2 #>  [37]  75:2 149+  112:2  74:2  84+  145+   85:2 126:2  78:2  47:2  44:2  60:2 #>  [49] 107:2  73:2 143+  139+  101:2  28:2  48:2 131+  137:2  90:2 132+   38:2 #>  [61] 137+  137+  137+   60:2  39:2   2:2  10:2  55:2 121+   29:2  83:2 117:2 #>  [73] 133+  132+  110:2  54:2   6:2  80+   57:2  88:2  15:2  12:2 128+   24:2 #>  [85]  20:2 125+  125+   18:2 117+  101+    3:2 101:2 101:1 111+   84:2  82+  #>  [97]  69:2  77:1 113:2  32:2 111:2 112+  109+   35:2  75:2  16:2  66:1   6:2 #> [109] 108+  100+   81:1 106+   46:2  27:2  96+   91:2 103+  103+  101+   98+  #> [121]  42:2  69+  100+  100+   79:2  25:2  30:2  97+   98+   46:2  25:2  94+  #> [133]  37:2  94+    4:2  87+   28:2  93+   81:1  50:2  91+   91+    6:2  67:2 #> [145]  35:2  89+   55:2  39:2  88+   75+   87+   86+   85+   84+   84+   83+  #> [157]  73:1  31:2  83+   51:2  24:2  76+   80+    7:2  80+   26:2  80+   76+  #> [169]  77+   77+   77+   52+   76+   75+   74+   72+   68:2  74+   29:2  72+  #> [181]  73+   71+   71+   58:2  35:2  25:2  70+   40:2  67+   19:2  10:2  63+  #> [193]  66+   64+   32:2  64+   11:2  65+   38:2  64+   63+   58+   61+   62+  #> [205]  61+   22:2  60+   27:1  59+   30:2  55:2  58+   47:1  24:1  58+   58+  #> [217]  58+   47+   58+   57+   24:1  56+   55+   53+   55+   53+   54+   54+  #> [229]  42:1  50:1  35:1  53+    5:2  39:2  44+   51+   51+   50+   51+   44+  #> [241]  48+   47+   46+   47+   46+    1:2  47+   33+   46+   46+   46+   40+  #> [253]  35:1  26:2  44+   29:1  43+   43+   42+   28:1  43+   17:1  42+   42+  #> [265]  42+   41+   41+   40+   39+   39+   37+   37+   32+   30+   27+   25+  task$times() # (unsorted) times #>   [1]  13 147  33  63  49  60  81  78   1 123   9 117 117 120  25   4 139  44 #>  [19] 113  22   8 134 135  47   2  18 148  10 126 148 104 129  93 118   7 106 #>  [37]  75 149 112  74  84 145  85 126  78  47  44  60 107  73 143 139 101  28 #>  [55]  48 131 137  90 132  38 137 137 137  60  39   2  10  55 121  29  83 117 #>  [73] 133 132 110  54   6  80  57  88  15  12 128  24  20 125 125  18 117 101 #>  [91]   3 101 101 111  84  82  69  77 113  32 111 112 109  35  75  16  66   6 #> [109] 108 100  81 106  46  27  96  91 103 103 101  98  42  69 100 100  79  25 #> [127]  30  97  98  46  25  94  37  94   4  87  28  93  81  50  91  91   6  67 #> [145]  35  89  55  39  88  75  87  86  85  84  84  83  73  31  83  51  24  76 #> [163]  80   7  80  26  80  76  77  77  77  52  76  75  74  72  68  74  29  72 #> [181]  73  71  71  58  35  25  70  40  67  19  10  63  66  64  32  64  11  65 #> [199]  38  64  63  58  61  62  61  22  60  27  59  30  55  58  47  24  58  58 #> [217]  58  47  58  57  24  56  55  53  55  53  54  54  42  50  35  53   5  39 #> [235]  44  51  51  50  51  44  48  47  46  47  46   1  47  33  46  46  46  40 #> [253]  35  26  44  29  43  43  42  28  43  17  42  42  42  41  41  40  39  39 #> [271]  37  37  32  30  27  25 task$event() # event indicators (0 = censored, >0 = different causes) #>   [1] 2 0 2 2 1 0 2 2 2 2 2 0 2 0 2 2 0 2 0 2 2 2 0 2 2 2 0 2 2 0 2 0 2 0 2 2 2 #>  [38] 0 2 2 0 0 2 2 2 2 2 2 2 2 0 0 2 2 2 0 2 2 0 2 0 0 0 2 2 2 2 2 0 2 2 2 0 0 #>  [75] 2 2 2 0 2 2 2 2 0 2 2 0 0 2 0 0 2 2 1 0 2 0 2 1 2 2 2 0 0 2 2 2 1 2 0 0 1 #> [112] 0 2 2 0 2 0 0 0 0 2 0 0 0 2 2 2 0 0 2 2 0 2 0 2 0 2 0 1 2 0 0 2 2 2 0 2 2 #> [149] 0 0 0 0 0 0 0 0 1 2 0 2 2 0 0 2 0 2 0 0 0 0 0 0 0 0 0 0 2 0 2 0 0 0 0 2 2 #> [186] 2 0 2 0 2 2 0 0 0 2 0 2 0 2 0 0 0 0 0 0 2 0 1 0 2 2 0 1 1 0 0 0 0 0 0 1 0 #> [223] 0 0 0 0 0 0 1 1 1 0 2 2 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 1 2 0 1 0 0 0 #> [260] 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 task$unique_times() # sorted unique times #>   [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  15  16  17  18  19 #>  [19]  20  22  24  25  26  27  28  29  30  31  32  33  35  37  38  39  40  41 #>  [37]  42  43  44  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60 #>  [55]  61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77  78 #>  [73]  79  80  81  82  83  84  85  86  87  88  89  90  91  93  94  96  97  98 #>  [91] 100 101 103 104 106 107 108 109 110 111 112 113 117 118 120 121 123 125 #> [109] 126 128 129 131 132 133 134 135 137 139 143 145 147 148 149 task$unique_event_times() # sorted unique event times (from any cause) #>  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  15  16  17  18  19  20 #> [20]  22  24  25  26  27  28  29  30  31  32  33  35  37  38  39  40  42  44  46 #> [39]  47  48  49  50  51  54  55  57  58  60  63  66  67  68  69  73  74  75  77 #> [58]  78  79  81  83  84  85  88  90  91  93 101 104 106 107 110 111 112 113 117 #> [77] 123 126 134 137 task$aalen_johansen(strata = \"sex\") # Aalen-Johansen estimator #> Call: survfit(formula = f, data = data) #>  #>               n nevent     rmean se(rmean)* #> sex=m, (s0)  34      0 73.485839   8.777244 #> sex=f, (s0) 242      0 93.714998   3.738137 #> sex=m, 1     34      3 10.556980   5.624320 #> sex=f, 1    242     15  7.654985   1.904137 #> sex=m, 2     34     21 64.957181   9.152039 #> sex=f, 2    242     90 47.630017   3.733828 #>    *restricted mean time in state (max time = 149 )  # proportion of censored observations across all dataset task$cens_prop() #> [1] 0.5326087"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/as_prediction_cmprsk.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Competing Risk Prediction — as_prediction_cmprsk","title":"Convert to a Competing Risk Prediction — as_prediction_cmprsk","text":"Convert object PredictionCompRisks.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/as_prediction_cmprsk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Competing Risk Prediction — as_prediction_cmprsk","text":"","code":"as_prediction_cmprsk(x, ...)  # S3 method for class 'PredictionCompRisks' as_prediction_cmprsk(x, ...)  # S3 method for class 'data.frame' as_prediction_cmprsk(x, ...)"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/as_prediction_cmprsk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Competing Risk Prediction — as_prediction_cmprsk","text":"x () Object convert. ... () Additional arguments.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/as_prediction_cmprsk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to a Competing Risk Prediction — as_prediction_cmprsk","text":"PredictionCompRisks.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/as_prediction_cmprsk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to a Competing Risk Prediction — as_prediction_cmprsk","text":"","code":"library(mlr3) task = tsk(\"pbc\") learner = lrn(\"cmprsk.aalen\") learner$train(task) p = learner$predict(task)  # convert to a data.table tab = as.data.table(p)  # convert back to a Prediction as_prediction_cmprsk(tab) #>  #> ── <PredictionCompRisks> for 276 observations: ───────────────────────────────── #>  row_ids time event       CIF #>        1   13     2 <list[2]> #>        2  147     0 <list[2]> #>        3   33     2 <list[2]> #>      ---  ---   ---       --- #>      274   30     0 <list[2]> #>      275   27     0 <list[2]> #>      276   25     0 <list[2]>"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/as_task_cmprsk.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a Competing Risks Task — as_task_cmprsk","title":"Convert to a Competing Risks Task — as_task_cmprsk","text":"Convert object competing risks task (TaskCompRisks).","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/as_task_cmprsk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a Competing Risks Task — as_task_cmprsk","text":"","code":"as_task_cmprsk(x, ...)  # S3 method for class 'TaskCompRisks' as_task_cmprsk(x, clone = FALSE, ...)  # S3 method for class 'data.frame' as_task_cmprsk(   x,   time = \"time\",   event = \"event\",   id = deparse(substitute(x)),   ... )  # S3 method for class 'DataBackend' as_task_cmprsk(   x,   time = \"time\",   event = \"event\",   id = deparse(substitute(x)),   ... )"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/as_task_cmprsk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a Competing Risks Task — as_task_cmprsk","text":"x () Object convert, e.g. data.frame(). ... () Additional arguments. clone (logical(1)) TRUE, ensures returned object input x. time (character(1)) Name column outcome time. event (character(1)) Name column giving holds event indicator. \\(0\\) corresponds censoring, values \\(> 0\\) correspond different competing events. id (character(1)) Id new task. Defaults (deparsed substituted) name x.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr3cmprsk-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mlr3cmprsk: Competing Risks Machine Learning for 'mlr3' — mlr3cmprsk-package","title":"mlr3cmprsk: Competing Risks Machine Learning for 'mlr3' — mlr3cmprsk-package","text":"Provides unified interface right-censored competing risks tasks 'mlr3'.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr3cmprsk-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mlr3cmprsk: Competing Risks Machine Learning for 'mlr3' — mlr3cmprsk-package","text":"Maintainer: John Zobolas bblodfon@gmail.com (ORCID)","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_learners_cmprsk.aalen.html","id":null,"dir":"Reference","previous_headings":"","what":"Aalen Johansen Competing Risks Learner — mlr_learners_cmprsk.aalen","title":"Aalen Johansen Competing Risks Learner — mlr_learners_cmprsk.aalen","text":"learner estimates Cumulative Incidence Function (CIF) competing risks using empirical Aalen-Johansen (AJ) estimator. Transition probabilities event computed training data via survfit function predictions made unique times (events censoring) observed training set.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_learners_cmprsk.aalen.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Aalen Johansen Competing Risks Learner — mlr_learners_cmprsk.aalen","text":"Learner can instantiated via dictionary mlr_learners associated sugar function lrn():","code":"mlr_learners$get(\"cmprsk.aalen\") lrn(\"cmprsk.aalen\")"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_learners_cmprsk.aalen.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Aalen Johansen Competing Risks Learner — mlr_learners_cmprsk.aalen","text":"Task type: “cmprsk” Predict Types: “cif” Feature Types: “logical”, “integer”, “numeric”, “factor” Required Packages: mlr3, mlr3cmprsk, survival","code":""},{"path":[]},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_learners_cmprsk.aalen.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Aalen Johansen Competing Risks Learner — mlr_learners_cmprsk.aalen","text":"Aalen, O O, Johansen, Soren (1978). “empirical transition matrix non-homogeneous Markov chains based censored observations.” Scandinavian journal statistics, 141–150.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_learners_cmprsk.aalen.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Aalen Johansen Competing Risks Learner — mlr_learners_cmprsk.aalen","text":"mlr3::Learner -> mlr3cmprsk::LearnerCompRisks -> LearnerCompRisksAalenJohansen","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_learners_cmprsk.aalen.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Aalen Johansen Competing Risks Learner — mlr_learners_cmprsk.aalen","text":"mlr3::Learner$base_learner() mlr3::Learner$configure() mlr3::Learner$encapsulate() mlr3::Learner$format() mlr3::Learner$help() mlr3::Learner$predict() mlr3::Learner$predict_newdata() mlr3::Learner$print() mlr3::Learner$reset() mlr3::Learner$selected_features() mlr3::Learner$train()","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_learners_cmprsk.aalen.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Aalen Johansen Competing Risks Learner — mlr_learners_cmprsk.aalen","text":"LearnerCompRisksAalenJohansen$new() LearnerCompRisksAalenJohansen$clone()","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_learners_cmprsk.aalen.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Aalen Johansen Competing Risks Learner — mlr_learners_cmprsk.aalen","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_learners_cmprsk.aalen.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aalen Johansen Competing Risks Learner — mlr_learners_cmprsk.aalen","text":"","code":"LearnerCompRisksAalenJohansen$new()"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_learners_cmprsk.aalen.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Aalen Johansen Competing Risks Learner — mlr_learners_cmprsk.aalen","text":"objects class cloneable method.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_learners_cmprsk.aalen.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Aalen Johansen Competing Risks Learner — mlr_learners_cmprsk.aalen","text":"","code":"LearnerCompRisksAalenJohansen$clone(deep = FALSE)"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_learners_cmprsk.aalen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aalen Johansen Competing Risks Learner — mlr_learners_cmprsk.aalen","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_learners_cmprsk.aalen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aalen Johansen Competing Risks Learner — mlr_learners_cmprsk.aalen","text":"","code":"library(mlr3)  # Define the Learner learner = lrn(\"cmprsk.aalen\") learner #>  #> ── <LearnerCompRisksAalenJohansen> (cmprsk.aalen): Aalen Johansen Estimator ──── #> • Model: - #> • Parameters: list() #> • Packages: mlr3, mlr3cmprsk, and survival #> • Predict Types: [cif] #> • Feature Types: logical, integer, numeric, and factor #> • Encapsulation: none (fallback: -) #> • Properties: weights #> • Other settings: use_weights = 'use'  # Define a Task task = tsk(\"pbc\")  # Stratification based on event task$set_col_roles(cols = \"status\", add_to = \"stratum\")  # Create train and test set part = partition(task)  # Train the learner on the training set learner$train(task, row_ids = part$train) learner$model #> Call: survfit(formula = task$formula(1), data = task$data(cols = task$target_names)) #>  #>        n nevent     rmean se(rmean)* #> (s0) 184      0 90.075885   4.316580 #> 1    184     12  8.034342   2.238112 #> 2    184     74 50.889773   4.306029 #>    *restricted mean time in state (max time = 149 )  # Make predictions for the test set predictions = learner$predict(task, row_ids = part$test) predictions #>  #> ── <PredictionCompRisks> for 92 observations: ────────────────────────────────── #>  row_ids time event       CIF #>        3   33     2 <list[2]> #>        4   63     2 <list[2]> #>        7   81     2 <list[2]> #>      ---  ---   ---       --- #>      157   73     1 <list[2]> #>      213   47     1 <list[2]> #>      231   35     1 <list[2]>  # Score the predictions # AUC(t = 100), weighted mean score across causes (default) predictions$score(msr(\"cmprsk.auc\", cause = \"mean\", time_horizon = 100)) #> cmprsk.auc  #>        0.5   # AUC(t = 100), 1st cause predictions$score(msr(\"cmprsk.auc\", cause = 1, time_horizon = 100)) #> cmprsk.auc  #>        0.5   # AUC(t = 100), 2nd cause predictions$score(msr(\"cmprsk.auc\", cause = 2, time_horizon = 100)) #> cmprsk.auc  #>        0.5"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_measures_cmprsk.auc.html","id":null,"dir":"Reference","previous_headings":"","what":"Blanche's AUC Competing Risks Measure — mlr_measures_cmprsk.auc","title":"Blanche's AUC Competing Risks Measure — mlr_measures_cmprsk.auc","text":"Calculates time-dependent ROC-AUC specific time point, described Blanche et al. (2013). default, measure returns cause-independent AUC(t) score, calculated weighted average cause-specific AUCs. weights correspond relative event frequencies cause, following Equation (7) Heyard et al. (2020).","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_measures_cmprsk.auc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Blanche's AUC Competing Risks Measure — mlr_measures_cmprsk.auc","text":"Calls riskRegression::Score() : metric = \"auc\" cens.method = \"ipcw\" cens.model = \"km\" Notes riskRegression implementation: IPCW weights estimated using test data . extrapolation supported: time_horizon exceeds maximum observed time test data, error thrown. choice time_horizon critical: , time, events given cause occurred predicted CIFs zero, riskRegression return NaN cause-specific AUC (subsequently summary AUC).","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_measures_cmprsk.auc.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Blanche's AUC Competing Risks Measure — mlr_measures_cmprsk.auc","text":"Measure can instantiated via dictionary mlr_measures associated sugar function msr():","code":"mlr_measures$get(\"cmprsk.auc\") msr(\"cmprsk.auc\")"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_measures_cmprsk.auc.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Blanche's AUC Competing Risks Measure — mlr_measures_cmprsk.auc","text":"Task type: “cmprsk” Range: \\([0, 1]\\) Minimize: FALSE Average: macro Required Prediction: “cif” Required Packages: mlr3, mlr3cmprsk, riskRegression","code":""},{"path":[]},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_measures_cmprsk.auc.html","id":"parameter-details","dir":"Reference","previous_headings":"","what":"Parameter details","title":"Blanche's AUC Competing Risks Measure — mlr_measures_cmprsk.auc","text":"cause (numeric(1)|\"mean\") Integer number indicating cause use. Default value \"mean\" returns weighted mean cause-specific AUCs. time_horizon (numeric(1)) Single time point return score. NULL, median time point test set used.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_measures_cmprsk.auc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Blanche's AUC Competing Risks Measure — mlr_measures_cmprsk.auc","text":"Blanche, Paul, Dartigues, Francois J, Jacqmin-Gadda, Helene (2013). “Estimating comparing time-dependent areas receiver operating characteristic curves censored event times competing risks.” Statistics Medicine, 32(30), 5381–5397. ISSN 1097-0258, doi:10.1002/SIM.5958 , https://onlinelibrary.wiley.com/doi/10.1002/sim.5958. Heyard, Rachel, Timsit, Jean-Francois, Held, Leonhard (2020). “Validation discrete time--event prediction models presence competing risks.” Biometrical Journal, 62(3), 643–657. https://doi.org/10.1002/BIMJ.201800293.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_measures_cmprsk.auc.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Blanche's AUC Competing Risks Measure — mlr_measures_cmprsk.auc","text":"mlr3::Measure -> mlr3cmprsk::MeasureCompRisks -> MeasureCompRisksAUC","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_measures_cmprsk.auc.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Blanche's AUC Competing Risks Measure — mlr_measures_cmprsk.auc","text":"mlr3::Measure$aggregate() mlr3::Measure$format() mlr3::Measure$help() mlr3::Measure$print() mlr3::Measure$score()","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_measures_cmprsk.auc.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Blanche's AUC Competing Risks Measure — mlr_measures_cmprsk.auc","text":"MeasureCompRisksAUC$new() MeasureCompRisksAUC$clone()","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_measures_cmprsk.auc.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Blanche's AUC Competing Risks Measure — mlr_measures_cmprsk.auc","text":"Creates new instance R6 class.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_measures_cmprsk.auc.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blanche's AUC Competing Risks Measure — mlr_measures_cmprsk.auc","text":"","code":"MeasureCompRisksAUC$new()"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_measures_cmprsk.auc.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Blanche's AUC Competing Risks Measure — mlr_measures_cmprsk.auc","text":"objects class cloneable method.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_measures_cmprsk.auc.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Blanche's AUC Competing Risks Measure — mlr_measures_cmprsk.auc","text":"","code":"MeasureCompRisksAUC$clone(deep = FALSE)"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_measures_cmprsk.auc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blanche's AUC Competing Risks Measure — mlr_measures_cmprsk.auc","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_measures_cmprsk.auc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Blanche's AUC Competing Risks Measure — mlr_measures_cmprsk.auc","text":"","code":"library(mlr3)  # Define the Learner learner = lrn(\"cmprsk.aalen\") learner #>  #> ── <LearnerCompRisksAalenJohansen> (cmprsk.aalen): Aalen Johansen Estimator ──── #> • Model: - #> • Parameters: list() #> • Packages: mlr3, mlr3cmprsk, and survival #> • Predict Types: [cif] #> • Feature Types: logical, integer, numeric, and factor #> • Encapsulation: none (fallback: -) #> • Properties: weights #> • Other settings: use_weights = 'use'  # Define a Task task = tsk(\"pbc\")  # Stratification based on event task$set_col_roles(cols = \"status\", add_to = \"stratum\")  # Create train and test set part = partition(task)  # Train the learner on the training set learner$train(task, row_ids = part$train) learner$model #> Call: survfit(formula = task$formula(1), data = task$data(cols = task$target_names)) #>  #>        n nevent     rmean se(rmean)* #> (s0) 184      0 89.555756   4.139912 #> 1    184     12  8.066105   2.249986 #> 2    184     74 51.378138   4.138024 #>    *restricted mean time in state (max time = 149 )  # Make predictions for the test set predictions = learner$predict(task, row_ids = part$test) predictions #>  #> ── <PredictionCompRisks> for 92 observations: ────────────────────────────────── #>  row_ids time event       CIF #>        4   63     2 <list[2]> #>        9    1     2 <list[2]> #>       11    9     2 <list[2]> #>      ---  ---   ---       --- #>      139   81     1 <list[2]> #>      157   73     1 <list[2]> #>      256   29     1 <list[2]>  # Score the predictions # AUC(t = 100), weighted mean score across causes (default) predictions$score(msr(\"cmprsk.auc\", cause = \"mean\", time_horizon = 100)) #> cmprsk.auc  #>        0.5   # AUC(t = 100), 1st cause predictions$score(msr(\"cmprsk.auc\", cause = 1, time_horizon = 100)) #> cmprsk.auc  #>        0.5   # AUC(t = 100), 2nd cause predictions$score(msr(\"cmprsk.auc\", cause = 2, time_horizon = 100)) #> cmprsk.auc  #>        0.5"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_tasks_pbc.html","id":null,"dir":"Reference","previous_headings":"","what":"Primary Biliary Cholangitis Competing Risks Task — mlr_tasks_pbc","title":"Primary Biliary Cholangitis Competing Risks Task — mlr_tasks_pbc","text":"competing risks task pbc data set.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_tasks_pbc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Primary Biliary Cholangitis Competing Risks Task — mlr_tasks_pbc","text":"R6::R6Class inheriting TaskCompRisks.","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_tasks_pbc.html","id":"dictionary","dir":"Reference","previous_headings":"","what":"Dictionary","title":"Primary Biliary Cholangitis Competing Risks Task — mlr_tasks_pbc","text":"Task can instantiated via dictionary mlr_tasks associated sugar function tsk():","code":"mlr_tasks$get(\"pbc\") tsk(\"pbc\")"},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_tasks_pbc.html","id":"meta-information","dir":"Reference","previous_headings":"","what":"Meta Information","title":"Primary Biliary Cholangitis Competing Risks Task — mlr_tasks_pbc","text":"Task type: “cmprsk” Dimensions: 276x19 Properties: - Missings: FALSE Target: “time”, “status” Features: “age”, “albumin”, “alk.phos”, “ascites”, “ast”, “bili”, “chol”, “copper”, “edema”, “hepato”, “platelet”, “protime”, “sex”, “spiders”, “stage”, “trig”, “trt”","code":""},{"path":"https://mlr3cmprsk.mlr-org.com/reference/mlr_tasks_pbc.html","id":"pre-processing","dir":"Reference","previous_headings":"","what":"Pre-processing","title":"Primary Biliary Cholangitis Competing Risks Task — mlr_tasks_pbc","text":"Removed column id. Kept complete cases (missing values). Column age converted integer. Columns trt, stage, hepato, edema ascites converted factors. Column trt levels Dpenicillmain placebo instead 1 2. Column status 0 censored, 1 transplant 2 death. Column time converted days months.","code":""},{"path":[]}]
